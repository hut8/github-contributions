---
- name: provision server
  hosts: all
  user: root
  roles:
    - role: holms.fqdn
      fqdn: "{{ inventory_hostname }}"
      hostname: "{{ inventory_hostname_short }}"
    - role: kamaln7.swapfile
      swapfile_use_dd: True
      swapfile_size: 2048
  tasks:
    - name: update installed packages
      apt: upgrade=dist update_cache=yes

    - name: create ghc user
      user: name=ghc generate_ssh_key=yes shell=/bin/bash

    - name: install server base packages
      apt: name={{ item }} state=latest update_cache=yes
      with_items:
        - apt-file
        - apticron
        - build-essential
        - cowsay
        - curl
        - dnsutils
        - emacs24
        - git
        - htop
        - iftop
        - iotop
        - jq
        - mailutils
        - mc
        - ncdu
        - nodejs
        - ntp
        - pcregrep
        - python-dev
        - python-pip
        - python-virtualenv
        - python3-dev
        - python3-pip
        - rsync
        - silversearcher-ag
        - ssmtp
        - tig
        - tmux
        - toilet
        - virtualenvwrapper
        - wget
        - zsh

    - name: set tmp permissions
      file: path=/tmp mode=a+w

    - name: enable agent forwarding
      lineinfile: dest=/etc/ssh/sshd_config
                  state=present
                  regexp='^AllowAgentForwarding'
                  line='AllowAgentForwarding yes'
      notify: restart sshd

    - name: configure ssh keys for root
      authorized_key: user=root key=https://github.com/hut8.keys

    - name: configure ssh keys for ghc
      authorized_key: user=ghc key=https://github.com/hut8.keys

  handlers:
    - name: restart sshd
      service: name=ssh state=restarted

- name: install and configure mongodb
  user: root
  hosts: database
  tasks:
    - name: add mongodb key
      apt_key: keyserver=keyserver.ubuntu.com id=7F0CEB10

    - name: add mongodb repo
      apt_repository: repo='deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse' state=present

    - name: install mongodb
      apt: name=mongodb-org state=latest update_cache=yes

    - name: configure data directory
      file: path=/srv/db
            state=directory
            owner=mongodb
            group=daemon

    - name: install config file
      copy: src=mongod.conf
            dest=/etc/mongod.conf
      notify: restart mongodb

  handlers:
    - name: restart mongodb
      service: name=mongod state=restarted

- name: install and configure nginx
  user: root
  hosts: web
  tags:
    - deploy
  tasks:
    - name: install nginx
      apt: name=nginx-extras state=latest update_cache=yes

    - name: uninstall default site config
      file: path=/etc/nginx/sites-enabled/default
            state=absent

    - name: install nginx.conf
      template: src=github-contributions.nginx.conf
                dest=/etc/nginx/sites-enabled/github-contributions.nginx.conf
      notify: restart nginx

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

- name: make archive directory structures
  user: root
  hosts: database
  tasks:
    - name: archive directories
      file: path={{ item }} state=directory owner=ghc group=ghc
      with_items:
        - /github-archive
        - /github-archive/events
        - /github-archive/loaded
        - /github-archive/logs
        - /github-archive/timeline
        - /github-archive/transformed

- name: make common directory structures
  user: root
  hosts: github-contributions
  tags:
    - deploy
  tasks:
    - name: archive directories
      file: path={{ item }} state=directory owner=ghc group=ghc
      with_items:
        - /github-contributions
        - /srv

    - name: fix permissions on /srv
      file: path=/srv state=directory owner=ghc group=ghc

- name: install uwsgi configuration
  user: root
  hosts: web
  tasks:
    - name: uwsgi logs path
      file: path=/var/log/uwsgi state=directory owner=ghc group=ghc

    - name: make uwsgi config directory structure
      file: path={{ item }} state=directory owner=root group=root
      with_items:
        - /etc/uwsgi
        - /etc/uwsgi/vassals

    - name: install uwsgi emperor configuration
      template: src=emperor.ini
                dest=/etc/uwsgi/emperor.ini

    - name: install vassal for ghc
      template: src=github-contributions.uwsgi.ini
                dest=/etc/uwsgi/vassals/github-contributions.uwsgi.ini

    - name: install uwsgi upstart script
      template: src=uwsgi.conf
                dest=/etc/init/uwsgi.conf
      notify: reload upstart

  handlers:
    - name: reload upstart
      shell: initctl reload-configuration

- name: configure ssmtp
  user: root
  hosts: all
  tasks:
    - include_vars: secrets.yml

    - name: copy revaliases
      template: src=ssmtp-revaliases dest=/etc/ssmtp/revaliases

    - name: copy ssmtp.conf
      template: src=ssmtp.conf dest=/etc/ssmtp/ssmtp.conf mode=0600

- name: deploy application
  user: ghc
  hosts: all
  tags:
    - deploy
  tasks:
    - name: pull ghc repository
      git: repo=ssh://git@github.com/hut8/github-contributions.git
           dest=/github-contributions
           accept_hostkey=yes

    - name: identify release
      command: git rev-parse --short HEAD
      register: current_commit
      args:
        chdir: /github-contributions

    - debug: msg="deploying ghc at {{ current_commit.stdout }}"

    - name: install dependencies
      pip: requirements=/github-contributions/requirements.txt
           virtualenv=/srv/venv-{{ current_commit.stdout }}
           virtualenv_command="virtualenv --python=/usr/bin/python3"

    - name: commit venv
      file: path=/srv/venv
            src=/srv/venv-{{ current_commit.stdout }}
            state=link

    - name: commit app
      file: path=/srv/app
            src=/github-contributions/app
            state=link

- name: set service states
  user: root
  hosts: all
  tags:
    - deploy
  tasks:
    - name: ensure uwsgi is running
      service: name=uwsgi state=started

- name: install cron job
  user: root
  hosts: all
  tags:
    - deploy
  tasks:
    - name: github archive processor cron job
      cron: job=/github-contributions/conf/process-job
            name=archive-processor
            minute=5
            user=ghc

- name: install monitor cron job
  user: root
  hosts: all
  tags:
    - deploy
  tasks:
    - name: github archive archive processor monitor cron job
      cron: job=/github-contributions/conf/server-monitor.sh
            name=server-monitor
            minute=55
            user=ghc
